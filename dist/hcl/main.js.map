{"version":3,"sources":["./src/app/reducers/reducer.reducer.ts","./src/app/effects/europe.effects.ts","./src/environments/environment.ts","./src/app/presentation/region/region.component.html","./src/app/presentation/region/region.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/config.ts","./src/app/app.module.ts","./src/app/model/forms/form-config.ts","./src/app/service/asia.service.ts","./src/app/actions/country.actions.ts","./src/app/actions/region.actions.ts","./src/app/location-container-page/location-container-page.component.ts","./src/app/location-container-page/location-container-page.component.html","./src/app/service/europe.service.ts","./src/app/effects/asia.effects.ts","./src/app/app-routing.module.ts","./src/app/presentation/country-details/country-details.component.ts","./src/app/presentation/country-details/country-details.component.html","./src/app/selectors/location.selectors.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Action, createReducer, on } from '@ngrx/store';\nimport { loadCountrysSuccess } from '../actions/country.actions';\nimport { loadRegionsSuccess } from '../actions/region.actions';\n\n\nexport const reducerFeatureKey = 'reducer';\n\nexport interface State {\n  regions: string[],\n  defaultRegion: string,\n  selectLocationResult: Location[]\n}\n\nexport const initialState: State = {\n  regions: ['asia', 'europe'],\n  defaultRegion: 'asia',\n  selectLocationResult: []\n};\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(loadRegionsSuccess, (state) => ({ ...state, selectLocationResult : state.selectLocationResult })),\n  on(loadCountrysSuccess, (state) => ({ ...state, selectLocationResult : state.selectLocationResult }))\n);\n\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { mergeMap, map } from 'rxjs/operators';\nimport { loadCountrysSuccess } from '../actions/country.actions';\nimport { EuropeService } from '../service/europe.service';\n\n@Injectable()\nexport class EuropeEffects {\n  asiaEffect$ = createEffect(() => \n    this.actions$.pipe(\n      ofType('[Country] Load Countrys'),\n      mergeMap(() => this.europeService.getLocations()\n        .pipe(\n          map((data) => loadCountrysSuccess({data: data})\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions, \n    private europeService: EuropeService) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n<div>\n    <label for=\"region-select\">Region</label>\n    <select id=\"region-select\"\n        [formControl]=\"form.controls.region\">\n        <option *ngFor=\"let regionName of regions\"\n            [ngValue]=\"regionName\"> {{ regionName }}\n        </option>\n    </select>\n</div>\n<div>\n    <label for=\"country-select\">Country</label>\n    <select id=\"country-select\"\n        [formControl]=\"form.controls.country\">\n        <option *ngFor=\"let country of countries\"\n        [ngValue]=\"country\"> {{ country.name }}\n        </option>\n    </select>\n</div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Location } from 'src/app/model/location'\n\n@Component({\n  selector: 'app-region',\n  templateUrl: './region.component.html',\n  styleUrls: ['./region.component.scss']\n})\nexport class RegionComponent implements OnInit {  \n  @Input() countries: Observable<Location[]>;\n  @Input() regions: Observable<string[]>;\n  @Input()\n  form: FormGroup;\n  @Output() \n  formEmitter: EventEmitter<FormGroup>\n  \n  constructor(fb:FormBuilder) {\n    this.form = fb.group({\n      'region': [null],\n      'country': [null]\n    })\n   }\n\n  ngOnInit(): void {\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'hcl';\n}\n","<div>\n    <h1>Hello HCL</h1>\n    <app-location-container-page></app-location-container-page>\n    <router-outlet></router-outlet> \n</div>","export const serviceUrl: string = \"https://restcountries.eu/rest/v2/\";\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EuropeService } from './service/europe.service';\nimport { AsiaService } from './service/asia.service';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegionComponent } from './presentation/region/region.component';\nimport { CountryDetailsComponent } from './presentation/country-details/country-details.component';\nimport { AsiaEffects } from './effects/asia.effects';\nimport { LocationContainerPageComponent } from './location-container-page/location-container-page.component';\nimport { EffectsModule, EffectsRunner } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { EuropeEffects } from './effects/europe.effects';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './reducers/reducer.reducer';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegionComponent,\n    CountryDetailsComponent,\n    LocationContainerPageComponent\n  ],\n  imports: [   \n    ReactiveFormsModule, \n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    HttpClientModule,\n    StoreModule.forRoot({ reducer }),\n    EffectsModule.forRoot([AsiaEffects, EuropeEffects]),\n  ],\n  providers: [ EuropeService, AsiaService, EffectsRunner ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class FormConfig {\r\n    static locationFormConfig = () => {\r\n    return {\r\n        'region': [null],\r\n        'country': [null]\r\n        };\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { serviceUrl } from '../config';\n\n@Injectable()\nexport class AsiaService {\n  httpClient: HttpClient;\n\n  constructor() { }\n\n  public getLocations() : Observable<Location[]> {\n    // const header = this.getHeader();\n    return this.httpClient.get<Location[]>(serviceUrl + '/europe');\n  }\n}\n","import { createAction, props } from '@ngrx/store';\n\nexport const loadCountrys = createAction(\n  '[Country] Load Countrys'\n);\n\nexport const loadCountrysSuccess = createAction(\n  '[Country] Load Countrys Success',\n  props<{ data: any }>()\n);\n\nexport const loadCountrysFailure = createAction(\n  '[Country] Load Countrys Failure',\n  props<{ error: any }>()\n);\n","import { createAction, props } from '@ngrx/store';\n\nexport const loadRegions = createAction(\n  '[Region] Load Regions'\n);\n\nexport const loadRegionsSuccess = createAction(\n  '[Region] Load Regions Success',\n  props<{ data: any }>()\n);\n\nexport const loadRegionsFailure = createAction(\n  '[Region] Load Regions Failure',\n  props<{ error: any }>()\n);\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, pipe } from 'rxjs';\nimport { loadCountrys } from '../actions/country.actions';\nimport { FormConfig } from '../model/forms/form-config';\nimport { CountryDetailsComponent } from '../presentation/country-details/country-details.component';\nimport * as fromStore from '../reducers/reducer.reducer';\nimport { getLocationResultSelector, getRegionsSelector } from '../selectors/location.selectors';\n\n@Component({\n  selector: 'app-location-container-page',\n  templateUrl: './location-container-page.component.html',\n  styleUrls: ['./location-container-page.component.scss']\n})\nexport class LocationContainerPageComponent implements OnInit {\n  \n  region$: Observable<string[]>;\n  locationResult$: Observable<Location[]>;\n  form: FormGroup;\n  country: Location;\n\n  constructor(private store: Store<fromStore.State>, fb: FormBuilder) {\n    this.region$ = this.store.pipe(select(getRegionsSelector));\n    this.locationResult$ = this.store.pipe(select(getLocationResultSelector));\n    this.form = fb.group(FormConfig.locationFormConfig());\n   }\n\n  ngOnInit(): void {\n    this.form.controls.region.valueChanges.subscribe((selectedValue) => {\n      this.store.dispatch(loadCountrys());\n    });\n    this.form.controls.country.valueChanges.subscribe((selectedValue) => {\n      this.country = selectedValue;\n      this.store.dispatch(loadCountrys());\n    });\n  }\n}\n","<div class=\"flex\">\n    <div class=\"region-item\">\n    <app-region \n        [form]= \"form\"\n        [countries]=\"locationResult$\" \n        [regions]=\"region$\">\n    </app-region>\n  </div>\n  <div class=\"region-item\">\n    <app-country-details [countryDetail]=\"country\"></app-country-details>\n  </div>\n</div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { serviceUrl } from 'src/app/config';\n@Injectable()\nexport class EuropeService {\n  constructor(private httpClient: HttpClient) { }\n\n  public getLocations() : Observable<Location[]> {\n    // const header = this.getHeader();\n    return this.httpClient.get<Location[]>(serviceUrl + '/europe');\n  }\n\n  // private getHeader() {\n  //   return {\n  //     headers: new HttpHeaders({\n  //       'Content-Type':  'application/json',\n  //       'Access-Control-Allow-Origin':'*',\n  //       'Accept':'application/json, text/plain, */*',\n  //       'Cache-Control':  'no-cache, no-store, must-revalidate, post- check=0, pre-check=0',\n  //       'Pragma': 'no-cache',\n  //       'Expires': '0',\n  //     }),\n  //     observe: 'response'\n  //   };\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { loadCountrys, loadCountrysSuccess } from '../actions/country.actions';\nimport { AsiaService } from '../service/asia.service';\nimport { map, mergeMap } from 'rxjs/operators'\n\n\n\n@Injectable()\nexport class AsiaEffects {\n\n  asiaEffect$ = createEffect(() => \n    this.actions$.pipe(\n      ofType('[Country] Load Countrys'),\n      mergeMap(() => this.asiaService.getLocations()\n        .pipe(\n          map((data) => loadCountrysSuccess({data: data})\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions, \n    private asiaService: AsiaService) {}\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Location } from 'src/app/model/location'\n@Component({\n  selector: 'app-country-details',\n  templateUrl: './country-details.component.html',\n  styleUrls: ['./country-details.component.scss']\n})\nexport class CountryDetailsComponent implements OnInit {\n  constructor() { }\n  @Input() countryDetail: Location\n  ngOnInit(): void {\n  }\n\n}\n","<table>\n    <thead>\n        <th>Name</th>\n        <th>Capital</th>\n        <th>Population</th>\n        <th>Currencies</th>\n        <th>Flag</th>\n    </thead>\n    <tr>\n        <td> {{ countryDetail.name}}</td>\n        <td> {{ countryDetail.captial}}</td>\n        <td> {{ countryDetail.population}}</td>\n        <td> {{ countryDetail.currencies}}</td>\n        <td> {{ countryDetail.flag}}</td>\n    </tr>\n</table>","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { State } from '../reducers/reducer.reducer';\n\nexport const currentStateSelector = (state: State) => state;\n\nexport const getLocationResultSelector = createSelector (\n    currentStateSelector,\n    (state: State) => state.selectLocationResult\n)\n\nexport const getRegionsSelector = createSelector (\n    currentStateSelector,\n    (state: State) => state.regions\n)\n\nexport const getCurrentRegionSelector = createSelector (\n    currentStateSelector,\n    (state: State) => state.defaultRegion\n)\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}